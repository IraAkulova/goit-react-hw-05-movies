{"version":3,"file":"static/js/134.1af2f71c.chunk.js","mappings":"6LAIMA,EAAQ,4DADF,oCAgFZ,UA7Ee,WACb,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCL,EAAAA,EAAAA,WAAS,GAA/C,eAAOM,EAAP,KAAoBC,EAApB,KACA,GAAoCP,EAAAA,EAAAA,UAAS,IAA7C,eAAOQ,EAAP,KAAmBC,EAAnB,KACA,GAA0BT,EAAAA,EAAAA,UAAS,MAAnC,eAAOU,EAAP,KAAcC,EAAd,KACMC,EAAQR,EAAaS,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAoCf,OAxBFC,EAAAA,EAAAA,YAAU,WACHJ,GACLK,MAAM,GAAD,OACAlB,EADA,kBACkBa,EADlB,+CAGFM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAjB,GAEJ,GADAC,EAASD,EAAMoB,SACc,IAAzBpB,EAAMoB,QAAQC,OAChB,OAAOC,QAAQC,OACb,IAAIC,MAAJ,6CAAgDb,IAIrD,IACAc,OAAM,SAAAhB,GACLC,EAASD,GACXiB,QAAQC,IAAIlB,EAAO,GACtB,GAAE,CAACE,KAEJI,EAAAA,EAAAA,YAAU,WACRT,GAAe,EAChB,GAAE,KAGC,4BACE,kBAAMsB,SAhCS,SAACC,GACpBA,EAAEC,iBACF1B,EAAgB,CAAEO,MAAOJ,IACzBD,GAAe,EAChB,EA4BK,WACE,kBACEyB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SA1CY,SAACN,GACrBrB,EAAcqB,EAAEO,OAAOC,MACxB,EAyCSA,MAAO9B,KAET,mBAAQwB,KAAK,SAAb,uBAGDtB,GAA0B,IAAjBT,EAAMqB,SAAgB,wBAAKZ,EAAM6B,UAC1CtC,EAAMqB,OAAS,IACd,wBACGhB,GACCM,GACAX,EAAMuC,KAAI,SAAAC,GACR,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAM/B,GAAvC,SACG2B,EAAKK,OAASL,EAAKM,QAFfN,EAAKE,GAMjB,QAKd,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState, useEffect} from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst KEY = '136e9303af57d83b29ddf02ef48e9efe';\nconst BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}`;\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [visibleList, setVisibleList] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [error, setError] = useState(null);\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const onInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams({ query: inputValue });\n    setVisibleList(true);\n  };\n\n  useEffect(() => {\n    if (!query) { return };\n    fetch(\n      `${BASE_URL}&query=${query}&language=en-US&page=1&include_adult=false`\n    )\n      .then(response => response.json())\n      .then(films => {\n        setFilms(films.results);\n        if (films.results.length === 0) {\n          return Promise.reject(\n            new Error(`Oops, there is no movie with title ${query}`)\n          );\n        };\n        \n      })\n      .catch(error => {\n        setError(error);\n      console.log(error)});\n  }, [query]);\n\n  useEffect(() => {\n    setVisibleList(true);\n  }, []);\n  \n    return (\n      <div>\n        <form onSubmit={onFormSubmit}>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={onInputChange}\n            value={inputValue}\n          ></input>\n          <button type=\"submit\">Search</button>\n        </form>\n\n        {error && films.length === 0 && <h2>{error.message}</h2>}\n        {films.length > 0 && (\n          <ul>\n            {visibleList &&\n              query &&\n              films.map(film => {\n                return (\n                  <li key={film.id}>\n                    <Link to={`${film.id}`} state={{ from: location }}>\n                      {film.title || film.name}\n                    </Link>\n                  </li>\n                );\n              })}\n          </ul>\n        )}\n      </div>\n    );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","useState","films","setFilms","useSearchParams","searchParams","setSearchParams","visibleList","setVisibleList","inputValue","setInputValue","error","setError","query","get","location","useLocation","useEffect","fetch","then","response","json","results","length","Promise","reject","Error","catch","console","log","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","message","map","film","to","id","state","from","title","name"],"sourceRoot":""}