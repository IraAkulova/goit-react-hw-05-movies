{"version":3,"file":"static/js/183.fd12401e.chunk.js","mappings":"kNACA,EAAuB,mBAAvB,EAAqD,uB,SC+CrD,EAzCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACE,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,GAAD,OARG,qCAQH,YAAgBH,EAAhB,4BATC,mCASD,oBACFI,MAAK,SAAAC,GACJ,OAAOA,EAASC,MACjB,IACAF,MAAK,SAAAG,GACJ,IAAKA,EACH,OAAOC,QAAQC,OACb,IAAIC,MAAJ,0CAA6CV,KAGjDH,EAAQU,EAAKX,KACd,IACAe,OAAM,SAAAb,GAAWC,EAASD,GAAQc,QAAQC,IAAIf,EAAO,GACzD,GAAE,CAACE,KAGF,iBAAKc,UAAWC,EAAhB,UACGjB,IAAUF,IAAQ,wBAAKE,EAAMkB,WAC9B,eAAIF,UAAWC,EAAf,gBACGnB,QADH,IACGA,OADH,EACGA,EAAMqB,KAAI,SAAAC,GAAM,OACf,2BACE,gBACEC,IAAG,0CAAqCD,EAAOE,cAC/CC,IAAKH,EAAOI,QAEd,uBAAIJ,EAAOI,QACX,uCAAeJ,EAAOK,eANfL,EAAOM,GADD,QAa1B,C","sources":["webpack://goit-react-hw-05-movies/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__gPWdY\",\"castList\":\"Cast_castList__1BYq+\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport css from './Cast.module.css';\n\nconst KEY = '136e9303af57d83b29ddf02ef48e9efe';\nconst BASE_URL = `https://api.themoviedb.org/3/movie`;\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n      fetch(`${BASE_URL}/${movieId}/credits?api_key=${KEY}&language=en-US`)\n        .then(response => {\n          return response.json();\n        })\n        .then(film => {\n          if (!film) {\n            return Promise.reject(\n              new Error(`Oops, there is no movie with ID ${movieId}`)\n            );\n          }\n          setCast(film.cast);\n        })\n        .catch(error => { setError(error); console.log(error)});\n    }, [movieId]);\n \n    return (\n      <div className={css.cast}>\n        {error && !cast && <h2>{error.message}</h2>}\n        <ul className={css.castList}>\n          {cast?.map(artist => (\n            <li key={artist.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${artist.profile_path}`}\n                alt={artist.name}\n              />\n              <p>{artist.name}</p>\n              <p>Character: {artist.character}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n};\n\n\nexport default Cast;\n"],"names":["useState","cast","setCast","error","setError","movieId","useParams","useEffect","fetch","then","response","json","film","Promise","reject","Error","catch","console","log","className","css","message","map","artist","src","profile_path","alt","name","character","id"],"sourceRoot":""}